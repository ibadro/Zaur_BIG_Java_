package ОсновыJava.УправляющиеИнструкции;

public class BoolDemo {
        public static void main(String args[]) {
            boolean b;
            b = false;
            System.out.println("Значение b: " + b);
            b = true;
            System.out.println("Значение b: " + b);
// Логическое значение можно использовать для
// управления условной инструкцией if
            if(b) System.out.println("Эта инструкция выполняется");
            b = false;
            if(b) System.out.println("Эта инструкция не выполняется");
// В результате сравнения получается логическое значение
            System.out.println("Результат сравнения 10 >9: " + (10 > 9));
        }
    }

 /*   Анализируя эту программу, необходимо отметить следующее. Во-первых,
        метод p r i n t l n (), обрабатывая логическое значение, отображает символьные
        строки tr u e и f a ls e . Во-вторых, значение логической переменной может быть
        само по себе использовано для управления условной инструкцией i f . Это означает,
        что в следующем выражении нет необходимости:
        if(b == true) ...
        И в-третьих, результатом выполнения операции сравнения, например <, является
логическое значение. Именно поэтому при передаче методу p r i n t l n ()
        выражения (10 > 9) отображается логическое значение tru e . Скобки в данном
        случае необходимы, потому что оператор + имеет более высокий приоритет по
        сравнению с оператором >.*/