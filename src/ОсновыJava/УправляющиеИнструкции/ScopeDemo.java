package ОсновыJava.УправляющиеИнструкции;
// Демонстрация области действия блока кода
class ScopeDemo {
    public static void main(String args[]) {
        int x; // Эта переменная доступна для всего кода в  методе main
        x = 10;
        if (x == 10) { // Начало новой области действия
            int y = 20; // Эта переменная доступна только в данном блоке
// Обе переменные, "х" и "у", доступны в данном блоке кода
            System.out.println("х и у: " + x + " " + y);
            x = y*2; // А переменная "х" по-прежнему доступна
            //у = 100; // Ошибка! В этом месте переменная "у" недоступна Здесь переменная находится вне своей области действия.
        }
        System.out.println("х - это " + x);
    }
}
/*Как следует из комментариев к приведенной выше программе, переменная х
определяется в начале области действия метода main () и доступна для всего
кода, содержащегося в этом методе. В блоке условной инструкции i f объявляется
переменная у. Этот блок определяет область действия переменной у, и,
следовательно, она доступна только в нем. Именно поэтому закомментирована
строка кода у = 100;, находящаяся за пределами данного блока. Если удалить
символы комментариев, то при компиляции программы появится сообщение
об ошибке, поскольку переменная у недоступна для кода за пределами блока, в
котором она объявлена. В то же время в блоке условной инструкции i f можно
пользоваться переменной х, потому что код в блоке, который определяет вложенную
область действия, имеет доступ к переменным из внешней, охватывающей
его области действия.
Переменные можно объявлять в любом месте блока кода, но сделать это
следует перед тем, как пользоваться ими. Именно поэтому переменная, определенная
в начале метода, доступна для всего кода этого метода. А если объявить
переменную в конце блока, то такое объявление окажется бесполезным,
поскольку переменная станет вообще недоступной для кода.*/