package ОсновыJava.КлассыОбьектыМетоды;
/*Методы возвращают значения вызывающей части программы, используяследующую форму инструкции re tu rn :
return значение;где значение — конкретное возвращаемое значение. Данная форма инструкции r e tu r n может быть использована только в тех методах, тип которых отличается
от void. Более того, подобные методы обязаны возвращать значение, используя данную форму инструкции r e tu rn . J
Теперь мы можем немного видоизменить метод ra n g e () с учетом возвращаемыхзначений. Вместо того чтобы выводить дальность поездки в методе
ra n g e (), лучше ограничиться ее вычислением и возвратом полученного значения.Преимущество такого подхода заключается, в частности, в том, что возвращаемое
значение может быть использовано при выполнении других вычислений.Ниже приведен код видоизмененного метода ra n ge ( ) .*/
// Использование возвращаемого значения
public class Vehicle5 {
    int passengers; // количество пассажиров
    int fuelcap; // емкость топливного бака
    int mpg; // потребление топлива в милях на галлон

    // Возврат дальности поездки
    int range() {
        return mpg * fuelcap; // Возврат дальности поездки для заданного  транспортного средства
    }
}
    class RetMeth {
        public static void main(String args[]) {
            Vehicle5 minivan = new Vehicle5();
            Vehicle5 sportscar = new Vehicle5();
            int range1, range2;
// Присваивание значений полям объекта minivan
            minivan.passengers = 7;
            minivan.fuelcap = 16;
            minivan.mpg = 21;
// Присваивание значения полям объекта sportscar
            sportscar.passengers = 2;
            sportscar.fuelcap = 14;
            sportscar.mpg = 12;
// Получение дальности поездки для разных
// транспортных средств
            range1 = minivan.range();
            range2 = sportscar.range();
            System.out.println("Мини-фургон может перевезти " + minivan.passengers + " на расстояние " + range1 + " миль.");
            System.out.println("Спортивный автомобиль может перевезти " + sportscar.passengers + " на расстояние " + range2 + " миль.");
        }
    }

/*Обратите внимание на то, что вызов метода range () в данной программе
указывается в правой части оператора присваивания, тогда как в левой части —
переменная, которая принимает значение, возвращаемое методом range ( ) .
Таким образом, после выполнения следующей строки кода значение дальности
поездки для объекта minivan сохраняется в переменной rangel:
rangel = minivan.range ();
Следует иметь в виду, что в данном случае метод range () возвращает значение
типа int, т.е. вызывающая часть программы получает целочисленное значение.
Тип возвращаемого значения — очень важная характеристика метода,
поскольку возвращаемые данные должны соответствовать типу, указанному в
определении метода. Иными словами, если метод должен возвращать значение
типа double, то именно таким и следует объявить его тип.
Несмотря на то что приведенная выше программа компилируется и выполняется
без ошибок, ее эффективность можно повысить. В частности, переменные
rangel и range2 в ней не нужны. Вызов метода range () можно
непосредственно указать в качестве параметра метода println (), как продемонстрировано
ниже.
System.out.println("Мини-фургон может перевезти " +
minivan.passengers + " на расстояние " +
minivan.range() + ” миль");
В данном случае при выполнении метода println () будет автоматически
осуществляться вызов метод minivan. range (), а полученное в итоге значение
будет передаваться методу println (). Более того, к методу range () можно обратиться
в любой момент, когда понадобится значение дальности поездки для
объекта типа Vehicle. В качестве примера ниже приведено выражение, в котором
сравнивается дальность поездки двух транспортных средств,
if(vl.range() > v2.range()) System.out.println("vl больше v2");*/