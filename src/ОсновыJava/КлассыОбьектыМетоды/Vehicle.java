package ОсновыJava.КлассыОбьектыМетоды;
/*Для того чтобы проиллюстрировать особенности работы с классами, создадим
класс, который инкапсулирует сведения о транспортных средствах, например
о легковых автомобилях, фургонах и грузовиках. Назовем этот класс
Vehicle. В нем будут храниться следующие сведения: количество пассажиров,
емкость топливного бака и среднее потребление топлива (в милях на галлон).
Ниже приведен первый вариант класса Vehicle, в котором определены три
переменные экземпляра: passengers, fuelcap и mpg. Обратите внимание на
то, что в классе Vehicle пока еще отсутствуют методы. Они будут добавлены в
последующих разделах, а пока в этом классе содержатся лишь данные,*/
  class Vehicle6 {
        int passengers222; // количество пассажиров
        int fuelcap222; // емкость топливного бака
        int mpg222; // потребление топлива в милях на галлон
    }
//В этом классе объявляется объект типа Vehicle
class VehicleDemo {
    public static void main(String args[]) {
        Vehicle6 minivan22 = new Vehicle6();
        int range;
// Присваивание значений полям в объекте minivan
        minivan22.passengers222 = 7;
        minivan22.fuelcap222= 16;
        minivan22.mpg222 = 21; // Обратите внимание на использование точечной нотации для доступа к переменным экземпляра
        // Расчет дальности поездки с полным баком горючего
        range = minivan22.fuelcap222 * minivan22.mpg222;
        System.out.println("Мини-фургон может перевезти " + minivan22.passengers222 + " пассажиров на расстояние " + range + " миль");
    }
}
/*Объявление класса создает новый тип данных. В данном случае этот тип
называется Vehicle. Мы будем использовать это имя для объявления объектов
типа Vehicle. Как уже упоминалось выше, объявление класса — это всего
лишь описание типа данных, и реальный объект при этом не создается. Следовательно,
приведенный выше код не приводит к появлению объектов типа
Vehicle.
Для фактического создания реального объекта Vehicle потребуется примерно
такой код:
Vehicle minivan = new Vehicle(); // создание объекта minivan
// типа Vehicle
В результате выполнения этого кода создается объект minivan, представляющий
собой экземпляр класса Vehicle. Иными словами, абстрактная оболочка
класса обретает “плоть и кровь”. Соответствующие подробности мы обсудим
немного позже.
Всякий раз, когда вы создаете экземпляр класса, вы фактически создаете
объект, содержащий собственные копии всех переменных экземпляра, определенных
в классе. Иными словами, каждый объект типа Vehicle будет содержать
свои копии переменных passengers, fuelcap и mpg. Для обращения
к этим переменным используется так называемая точенная нотация, в соответствии с которой имя переменной указывается после имени объекта и
отделяется от него точкой:
объект. член
В этой форме объект указывается слева, а член класса — справа от точки.
Так, если переменной fuelcap объекта minivan нужно присвоить значение 16,
то это можно сделать следующим образом:
minivan.fuelcap = 16;
Вообще говоря, точечной нотацией можно пользоваться для обращения как
к переменным экземпляра, так и к методам.
Ниже приведен пример программы, в которой используется класс Vehicle.*/

