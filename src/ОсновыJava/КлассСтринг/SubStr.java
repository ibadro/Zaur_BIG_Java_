package ОсновыJava.КлассСтринг;
// Применение метода substring ()
public class SubStr {
    public static void main(String args[]) {
        String orgstr = "Java - двигатель Интернета.";
// Сформировать подстроку
        String substr = orgstr.substring(7, 25); // Здесь создается новая строка, содержащая нужную  подстроку
        System.out.println("orgstr; " + orgstr);
        System.out.println("substr: " + substr);
    }
}
/*воспользуемся еще одним способом обработки строк класса S tr in g —
методом s u b s t r in g (), возвращающим новую строку, которая содержит часть
вызывающей строки. В итоге создается новый строковый объект, содержащий
выбранную подстроку, тогда как исходная строка не меняется, а следовательно,
соблюдается принцип постоянства строк. Так выглядит общий синтаксис объявления
метода s u b s tr in g ():
string substring (int н а ч а л ь н ы й _ и н д е к с , int к о н е ч н ы й _ и н д е к с )
Здесь начальный_индекс обозначает начало извлекаемой подстроки, а
конечный_индекс — ее окончание. Ниже приведен пример программы, демонстрирующий
применение метода s u b s tr in g () и принцип неизменяемости
строк.*/