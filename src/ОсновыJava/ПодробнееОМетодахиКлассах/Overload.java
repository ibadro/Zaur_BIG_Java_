package ОсновыJava.ПодробнееОМетодахиКлассах;
/*В этом разделе речь пойдет об одном из самых интересных языковых средств
Java — перегрузке методов. Несколько методов одного класса могут иметь одно
и то же имя, отличаясь лишь набором параметров. Подобные методы называются
перегруженными, а сам процесс называют перегрузкой методов. Перегрузка
методов является одним из способов реализации принципа полиморфизма в
Java.Для того чтобы перегрузить метод, достаточно объявить его новый вариант,
который отличается от уже существующих, а все остальное сделает за вас компилятор.
Нужно лишь соблюсти одно условие: тип и/или число параметров в
каждом из перегружаемых методов должны быть разными. Одного лишь различия
в типах возвращаемых значений для этой цели недостаточно. (Информации
о возвращаемом типе не всегда будет хватать Java для принятия решения о том,
какой именно метод должен использоваться.) Конечно, перегружаемые методы
могут иметь разные возвращаемые типы, но при вызове метода выполняется
лишь тот его вариант, в котором параметры соответствуют передаваемым аргументам.
Ниже приведен простой пример программы, демонстрирующий перегрузку
методов.*/
// Перегрузка методов
  class Overload {
    void ovlDemo() { // Первая версия
        System.out.println("Без параметров");
    }

    // Перегрузка метода ovlDemo для одного параметра типа int
    void ovlDemo(int a) { //  вторая версия
        System.out.println("Один параметр: " + a);
    }

    // Перегрузка метода ovlDemo для двух параметров типа int
    int ovlDemo(int а, int b) { // 3 версия
        System.out.println("Два параметра: " + а + " " + b);
        return а + b;
    }

    // Перегрузка метода ovlDemo для двух параметров типа double
    double ovlDemo(double a, double b) { //Четвертая версия
        System.out.println("Два параметра типа double: " + a + " " + b);
        return a + b;
    }
}

    class OverloadDemo {
        public static void main(String args[]) {
            Overload ob = new Overload();
            int resl;
            double resD;
// Поочередный вызов всех версий метода ovlDemo()
            ob.ovlDemo();
            System.out.println();
            ob.ovlDemo(2);
            System.out.println();
            resl = ob.ovlDemo(4, 6);
            System.out.println("Результат вызова ob.ovlDemo(4, 6): " + resl);
            System.out.println();
            resD = ob.ovlDemo(1.1, 2.32);
            System.out.println("Результат вызова ob.ovlDemo(1.1, 2.32): " + resD);


        }
    }


/*Как видите, метод ovlDemo () перегружается четырежды. В первой его версии
параметры не предусмотрены, во второй — определен один целочисленный параметр, в третьей — два целочисленных параметра, в четвертой — два параметра
типа double. Обратите внимание на то, что первые два варианта метода
ovlDemo () имеют тип void, а два других возвращают значение. Как пояснялось
ранее, тип возвращаемого значения не учитывается при перегрузке методов.*/